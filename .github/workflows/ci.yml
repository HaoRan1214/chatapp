name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 3000:3000
          - 5000:5000

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install backend dependencies
      run: |
        cd backend
        npm install

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Install microservices dependencies
      run: |
        cd microservices
        npm install

    - name: Install Cypress plugin for ESLint
      run: npm install eslint-plugin-cypress --save-dev

    - name: Start backend
      run: |
        cd backend
        npm start &
        sleep 10

    - name: Start frontend
      run: |
        cd frontend
        npm run dev &
        sleep 10

    - name: Start microservices
      run: |
        cd microservices
        npm run start-all &
        sleep 10

    - name: Run static code analysis
      run: npm run lint

    - name: Run security check
      run: npm audit

    - name: Run tests
      run: npm test

    - name: Run load tests
      run: |
        docker run --network=host --rm -i grafana/k6 run - <load-test/load-test-script.js

    - name: Run end-to-end tests
      run: npx cypress run

  deploy:

    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/chatapp:latest

    - name: Deploy with Docker Compose
      run: |
        docker-compose -f docker-compose.yml up -d
